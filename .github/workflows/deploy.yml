name: Deploy

on:
  push:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        default: 'staging'
        type: choice
        options:
        - staging
        - production

jobs:
  deploy:
    runs-on: ubuntu-latest

    environment: ${{ github.event.inputs.environment || 'staging' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Generate Prisma client
      run: npx prisma generate

    - name: TypeScript type check
      run: npx tsc --noEmit

    - name: Build application
      run: npm run build

    - name: Deploy to Vercel
      uses: amondnet/vercel-action@v25
      with:
        vercel-token: ${{ secrets.VERCEL_TOKEN }}
        vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
        vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
        vercel-args: '--prod'

    - name: Run database migrations
      run: npx prisma migrate deploy
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL }}

    - name: Health check
      run: |
        sleep 30
        curl -f ${{ secrets.APP_URL }}/api/health || exit 1

    - name: Notify deployment
      uses: actions/github-script@v7
      with:
        script: |
          const environment = '${{ github.event.inputs.environment || ''staging'' }}'
          const status = 'success'

          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `ðŸš€ **Deployment ${status.toUpperCase()}**\n\nâœ… Application deployed to **${environment}**\nâœ… Database migrations applied\nâœ… Health check passed\n\nEnvironment: ${environment}\nURL: ${{ secrets.APP_URL }}\nTimestamp: ${new Date().toISOString()}`
          })
